function properties = batchconfig2propgrid(batchconfig)

if nargin==0;%Use the global object BATCH_CONFIG
    global BATCH_CONFIG
    if isempty(BATCH_CONFIG);
        batchconfig=batchconfig_obj;
    else
        batchconfig=BATCH_CONFIG;
    end
end

for i=1:length(batchconfig);
    properties((i*11)-10:(i*11)) = [ ...
... % basic properties...
        PropertyGridField(['exec_func[',num2str(i),']'], batchconfig(i).exec_func, ...
        'Type', PropertyType('char', 'row', {'ef_gen_m','ef_current_base','ef_sqsub','ef_sqsub_sshfm','ef_mshpc'}), ...
        'Category', ['Level ',num2str(i),' - ',batchconfig(i).file_name], ...
        'DisplayName', ['exec_func[',num2str(i),']'], ...
        'Description', ['Name of the function that will execute the htb files.']) ...
        PropertyGridField(['replace_string[',num2str(i),']'], batchconfig(i).replace_string, ...
        'Type', PropertyType('cellstr', 'column'), ...
        'Category', ['Level ',num2str(i),' - ',batchconfig(i).file_name], ...
        'DisplayName', ['replace_string[',num2str(i),']'], ...
        'Description', ['The cell array of strings to swap into the History Template script files.']) ...
        PropertyGridField(['order[',num2str(i),']'], batchconfig(i).order, ...
        'Type', PropertyType('denserealdouble', 'matrix'), ...
        'Category', ['Level ',num2str(i),' - ',batchconfig(i).file_name], ...
        'DisplayName', ['order[',num2str(i),']'], ...
        'Description', ['values representing the sequence order.']) ...
... % execute head...
        PropertyGridField(['qsub[',num2str(i),']'], [], ...
        'Category', ['Level ',num2str(i),' - ',batchconfig(i).file_name], ...
        'DisplayName', ['exec_config[',num2str(i),']']) ...
...% execute properties...
        PropertyGridField(['qsub[',num2str(i),'].job_name'], batchconfig(i).job_name, ...
        'Type', PropertyType('char', 'row'), ...
        'Category', ['Level ',num2str(i),' - ',batchconfig(i).file_name], ...
        'DisplayName', ['job_name'], ...
        'Description', ['Parameters for creating the job name (Batch string swap rules apply).']) ...
        PropertyGridField(['qsub[',num2str(i),'].session_init'], batchconfig(i).session_init, ...
        'Type', PropertyType('char', 'row'), ...
        'Category', ['Level ',num2str(i),' - ',batchconfig(i).file_name], ...
        'DisplayName', ['session_init'], ...
        'Description', ['Code [or file name of a text file containing code] to execute at the begining of a submission session.']) ...
        PropertyGridField(['qsub[',num2str(i),'].job_init'], batchconfig(i).job_init, ...
        'Type', PropertyType('char', 'row'), ...
        'Category', ['Level ',num2str(i),' - ',batchconfig(i).file_name], ...
        'DisplayName', ['job_init'], ...
        'Description', ['Code [or file name of a text file containing code] to execute at the begining of a job.']) ...
        PropertyGridField(['qsub[',num2str(i),'].m_init'], batchconfig(i).m_init, ...
        'Type', PropertyType('char', 'row'), ...
        'Category', ['Level ',num2str(i),' - ',batchconfig(i).file_name], ...
        'DisplayName', ['m_init'], ...
        'Description', ['Code [or file name of a text file containing code] to execute at the begining of the m file.']) ...
...%        PropertyGridField(['qsub[',num2str(i),'].queue'], batchconfig(i).queue, ...
...%        'Type', PropertyType('char', 'row'), ...
...%        'Category', ['Level ',num2str(i),' - ',batchconfig(i).file_name], ...
...%        'DisplayName', ['queue'], ...
...%        'Description', ['[sqsub -q input] The scheduller queue type to submit to. Options are: serial, threaded, mpi.']) ...
...%        PropertyGridField(['qsub[',num2str(i),'].run_time'], batchconfig(i).run_time, ...
...%        'Type', PropertyType('char', 'row'), ...
...%        'Category', ['Level ',num2str(i),' - ',batchconfig(i).file_name], ...
...%        'DisplayName', ['run_time'], ...
...%        'Description', ['[sqsub -r input] Run time limit for the this job (scheduler will terminate the process if it is in Run state for this duration)']) ...
...%        PropertyGridField(['qsub[',num2str(i),'].num_cores'], batchconfig(i).num_cores, ...
...%        'Type', PropertyType('denserealdouble', 'matrix'), ...
...%        'Category', ['Level ',num2str(i),' - ',batchconfig(i).file_name], ...
...%        'DisplayName', ['num_cores'], ...
...%        'Description', ['[sqsub -n input] The number of cores.']) ...
...%        PropertyGridField(['qsub[',num2str(i),'].num_nodes'], batchconfig(i).num_nodes, ...
...%        'Type', PropertyType('denserealdouble', 'matrix'), ...
...%        'Category', ['Level ',num2str(i),' - ',batchconfig(i).file_name], ...
...%        'DisplayName', ['num_nodes'], ...
...%        'Description', ['[sqsub -n input] The number of nodes.']) ...
...%        PropertyGridField(['qsub[',num2str(i),'].num_proc_per_node'], batchconfig(i).num_proc_per_node, ...
...%        'Type', PropertyType('denserealdouble', 'matrix'), ...
...%        'Category', ['Level ',num2str(i),' - ',batchconfig(i).file_name], ...
...%        'DisplayName', ['num_proc_per_node'], ...
...%        'Description', ['[sqsub -npp input] The number of procedures per node.']) ...
...%        PropertyGridField(['qsub[',num2str(i),'].num_thread_per_proc'], batchconfig(i).num_thread_per_proc, ...
...%        'Type', PropertyType('denserealdouble', 'matrix'), ...
...%        'Category', ['Level ',num2str(i),' - ',batchconfig(i).file_name], ...
...%        'DisplayName', ['num_thread_per_proc'], ...
...%        'Description', ['[sqsub -tpp input] The number of threads per procedure.']) ...
...%        PropertyGridField(['qsub[',num2str(i),'].memory_per_proc'], batchconfig(i).memory_per_proc, ...
...%        'Type', PropertyType('char', 'row'), ...
...%        'Category', ['Level ',num2str(i),' - ',batchconfig(i).file_name], ...
...%        'DisplayName', ['memory_per_proc'], ...
...%        'Description', ['[sqsub -mpp input] The amount of memory per process. (e.g. 100K, 6G, etc...)']) ...
        PropertyGridField(['qsub[',num2str(i),'].qsub_options'], batchconfig(i).qsub_options, ...
        'Type', PropertyType('cellstr', 'column'), ...
        'Category', ['Level ',num2str(i),' - ',batchconfig(i).file_name], ...
        'DisplayName', ['qsub_options'], ...
        'Description', ['(-r|-W)' char(9) 'timelimit (THIS IS REQUIRED FOR EVERY JOB)' char(10) ...]) ...
        char(9) 'provide a runtime limit (elapsed, wallclock time, not summed' char(10) ... 
        char(9) 'across cpus) specified in any of the following forms:' char(10) ...
        char(9) '15' char(9) '(assumed to be minutes)' char(10) ...
        char(9) '15m' char(9) '(same)' char(10) ...
        char(9) '.25h' char(9) '(same)' char(10) ...
        char(9) '2.5h' char(9) '(2 hours 30 minutes)' char(10) ...
        char(9) '3.5d' char(9) '(3 days 12 hours)' char(10) ...
        char(9) '84:0' char(9) '(same, in LSF''s hours:minutes format)' char(10) ...
        char(10) ...
        '-i ifile' char(9) 'job reads inputs from ''ifile'' (no default)' char(10) ...
        '-o ofile' char(9) 'job output to ''ofile'' (REQUIRED FOR EVERY JOB)' char(10) ...
        '-e efile' char(9) 'job errors go to ''efile'' (default: same as -o)' char(10) ...
        '' char(10) ...
        '-t|--test' char(9) '''test'' mode: short but immediate (preemptive)' char(10) ...
        '-q queue' char(9) 'queue name (serial, threaded, mpi; default serial)' char(10) ...
        '-f flag' char(9) 'specify certain flags to modify behavior.  flags include:' char(10) ...
        char(9) 'mpi, interactive, test, mail, permitcoredump' char(10) ...
        char(10) ...
        '-n ncpus' char(9) 'require n cpus or cores (default 1)' char(10) ...
        '-N nnodes' char(9) 'require n nodes (does not imply exclusive use)' char(10) ...
        char(10) ...
        '--ppn=ppn' char(9) 'start ppn proceses per node' char(10) ...
        '--tpp=tpp' char(9) 'permit tpp threads per process (OMP_NUM_THREADS)' char(10) ...
        '--gpp=gpp' char(9) 'allocate gpp gpus per process' char(10) ...
        char(10) ...
        '--mpp=' char(10) ...
        '--memperproc=' char(10) char(9) 'amount of memory required by each process.  may be specified' char(10) ...
        char(9) 'like 64M or 2.5G (M=2^20, G=2^30).  for an MPI job, this is ' char(10) ...
        char(9) 'the per-rank size.  for threaded jobs, it''s the process size,' char(10) ...
        char(9) '(that is, not per-thread.)' char(10) ...
        char(10) ...
        '--nodes=clu[1-4]' char(10) ...
        char(9) 'require a specific set of nodes.  eg wha[1-4] or' char(10) ...
        char(9) 'req666.' char(10) ...
        char(10) ...
        '--pack' char(9) 'require a minimal number of nodes, so processes occupy' char(10) ...
        char(9) 'all cpus per node.' char(10) ...
        char(10) ...
        '--mail-start' char(9) 'notify when the job starts.' char(10) ...
        '--mail-end' char(9) 'notify when the job ends (either normally or not).' char(10) ...
        '--mail-abort' char(9) 'notify when the job ends abnormally.' char(10) ...
        '-m|--mail' char(9) '(compatibility - same as mail-end)' char(10) ...
        char(9) 'this email only goes to your account''s email address.' char(10) ...
        char(10) ...
        '-w|--waitfor=jobid[,jobid...]]' char(10) ...
        char(9) 'wait for a list of jobs to complete' char(10) ...
        char(10) ...
        '-j|--jobname' char(9) 'provides a name for the job.' char(10) ...
        char(10) ...
        '--project' char(9) 'specify a project (group) for accounting purposes.' char(10) ...  
        char(9) 'defaults to the user''s group.  may also be given via' char(10) ...
        char(9) 'SQ_PROJECT environment variable.' char(10) ...
        char(10) ...
        '--idfile=fname' char(10) char(9) 'write the jobid into a file named ''fname''.' char(10) ...
        char(10) ...
        '--nompirun' char(9) 'don''t automatically invoke mpirun for mpi jobs.' char(10) ...
        char(9) 'note that you should probably look at mpirun parameters' char(10) ...
        char(9) 'sqsub uses, so that you get layout and binding right.' char(10) ...
        char(10) ...
        '-f flag' char(9) 'specify certain flags to modify behavior.' char(10) ...  
        char(9) 'Universal flags include: mpi, threaded, test, mail' char(10) ...
        char(9) 'on some clusters, other flags have added meaning, such ' char(10) ...
        char(9) 'xeon/opteron on Hound, and dual/quad on Goblin and ' char(10) ...
        char(9) 'selecting sub-clusters on Kraken (bal/bru/dol/meg/tig/wha/nar)' char(10) ...
        char(10) ...
        '-h or --help' char(9) 'show brief usage message' char(10) ...
        '--man' char(9) 'show man page' char(10) ...
        char(10) ...
        '-v|--verbose' char(9) 'verbose mode: shows debugging-type details' char(10) ...
        '-d|--debug' char(9) 'debug mode: don''t actually submit, but show the command' char(10) ...
        ]) ...
        PropertyGridField(['qsub[',num2str(i),'].software'], batchconfig(i).software, ...
        'Type', PropertyType('char', 'row', {'matlab','octave','none'}), ...
        'Category', ['Level ',num2str(i),' - ',batchconfig(i).file_name], ...
        'DisplayName', ['software'], ...
        'Description', ['Name of the software to used in executing the code from History file number', num2str(i)]) ...
        PropertyGridField(['qsub[',num2str(i),'].program_options'], batchconfig(i).program_options, ...
        'Type', PropertyType('cellstr', 'column'), ...
        'Category', ['Level ',num2str(i),' - ',batchconfig(i).file_name], ...
        'DisplayName', ['program_options'], ...
        'Description', ['Options ???.']) ...
        ];
end
