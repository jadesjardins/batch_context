function job_struct=rsub_sys(job_struct,order_inds)

%% OBSOLETE... ONLY NEEDED BY SSHFM...LOAD THE QSUB.TXT FILE...

%if ~isfield(job_struct,'user_password');
%    if isfield(job_struct,'user_name');
%        job_struct.user_password=logindlg('Title',[job_struct.user_name,'@',job_struct.host_name],'Password','only');
%    else
%        [job_struct.user_name,job_struct.user_password]=logindlg('Title',job_struct.host_name);
%    end
%end

%% OBSOLETE... ONLY NEEDED BY SSHFM...INITIATE THE SSH CONNECTION...
%conn=sshfrommatlab(job_struct.user_name, ...
%    job_struct.host_name, ...
%    job_struct.user_password);

%% SFTP FROMMATLAB M FILES TO THE REMOTE LOG...
zip([fullfile(job_struct(order_inds(1),order_inds(2)).context_config.log,job_struct(order_inds(1),order_inds(2)).m_path),'.zip'], ...
    '*.*',fullfile(job_struct(order_inds(1),order_inds(2)).context_config.log,job_struct(order_inds(1),order_inds(2)).m_path));
job_struct(order_inds(1),order_inds(2)).remote_log=fullfile(job_struct(order_inds(1),order_inds(2)).remote_work, ...
    job_struct(order_inds(1),order_inds(2)).context_config.log);%, ...
    %[job_struct.m_path,'.zip']);
%adjust path delimiters if necessary...
job_struct(order_inds(1),order_inds(2)).remote_log=strrep(job_struct(order_inds(1),order_inds(2)).remote_log,'\','/');


%% OBSOLETE... TO BE REPLACED WITH SYSTEM CALL TO SCP...
%sftpfrommatlab(job_struct.user_name, ...
%    job_struct.host_name, ...
%    job_struct.user_password, ...
%    fullfile(cd,fullfile(job_struct.context_config.log, ...
%    [job_struct.m_path,'.zip'])), ...
%    job_struct.remote_log)

%% SECURE COPY M FILE TO REMOTE HOST...
system(['scp ',...
    fullfile(cd,job_struct(order_inds(1),order_inds(2)).context_config.log, ...'
    [job_struct(order_inds(1),order_inds(2)).m_path,'.zip']), ' ', ...
    job_struct(order_inds(1),order_inds(2)).work_host_name,':',job_struct(order_inds(1),order_inds(2)).remote_log]);

%% GET THE QSUBSTR... UPDATE TO EXECUTION OF BASH SCRIPT...
sys_str=sprintf('%s "%s"',['ssh ',job_struct(order_inds(1),order_inds(2)).context_config.remote_exec_host], ...
    ['cd ',job_struct(order_inds(1),order_inds(2)).remote_work,'; ', ...
    'unzip ',[fullfile(job_struct(order_inds(1),order_inds(2)).context_config.log,job_struct(order_inds(1),order_inds(2)).m_path),'.zip -d '], ...
    fullfile(job_struct(order_inds(1),order_inds(2)).context_config.log,job_struct(order_inds(1),order_inds(2)).m_path),'; ' ...
    ' chmod 755 ',fullfile(job_struct(order_inds(1),order_inds(2)).context_config.log,job_struct(order_inds(1),order_inds(2)).m_path),'/submit.sh; ', ...
    fullfile(job_struct(order_inds(1),order_inds(2)).context_config.log,job_struct(order_inds(1),order_inds(2)).m_path),'/submit.sh;']);
[status,result_str]=system(sys_str,'-echo');

%% OBSOLETE... ONLY NEEDED BY SSHFM... ISSUE THE SQSUBSTR...
%[conn,result]=sshfrommatlabissue(conn,qsubstr);

%% OBSOLETE... UNTESTED
%sys_str=sprintf('%s\n"%s"',['ssh ',job_struct.user_name,'@',job_struct.host_name],qsubstr)
%[status,result]=system(sys_str,'-echo');
%print results to the command line...
%disp(result)

%% COLLECT THE NEW JOBIDS FROM THE SCHEDULLER...
cr=find(double(result_str)==10);
for i=1:length(cr)-1;
    result{i}=result_str(cr(i)+1:cr(i+1)-1);
end
job_struct(order_inds(1),order_inds(2)).jobids={};
for bfi=1:length(job_struct(order_inds(1),order_inds(2)).batch_dfn);
    jobidstr=strtrim(result{length(result)-length(job_struct(order_inds(1),order_inds(2)).batch_dfn)+bfi});
    sinds=strfind(jobidstr,' ');
    job_struct(order_inds(1),order_inds(2)).jobids{bfi}=jobidstr(sinds(end)+1:end);
end

%% OBSOLETE... ONLY NEEDED BY SSHFM... CLOSE SSHFROMMATLAB CONNECTION...
%sshfrommatlabclose(conn);
